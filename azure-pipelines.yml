# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ACRconnection'
  imageRepository: 'appimg'
  containerRegistry: 'containerregistryfork8s8608.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildNumber)'

pool: myagent


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: HelmInstaller@0
      inputs:
        helmVersion: '2.14.1'
        installKubectl: true
    - task: HelmDeploy@0
      inputs:
        command: 'package'
        chartPath: '$(Build.SourcesDirectory)/helm'
        chartVersion: '$(Build.BuildId)'
        

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'helmChart'
        publishLocation: 'pipeline'
    
- stage: Deploy_Staging
  displayName: Deploy Staging
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy_Staging
    displayName: Deploy
    variables: 
    - group: stagingVars 
    environment: 'KubernetesProj-1840.staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmInstaller@0
            displayName: Install Helm
            inputs:
              helmVersion: '2.14.1'
              installKubectl: true
              
          - task: DownloadPipelineArtifact@2
            displayName: Download packaged artifact
            inputs:
              buildType: 'current'
              artifactName: 'helmChart'
              targetPath: '$(Pipeline.Workspace)'
          

          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'StagingConnection'
              namespace: '$(namespace)'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/helmChart/helm-$(Build.BuildId).tgz'
              releaseName: '$(namespace)'
              overrideValues: 'deployment.tag=$(Build.BuildNumber)'
              valueFile: '$(Pipeline.Workspace)/s/helm/$(stage)Values.yaml'

              

- stage: Deploy_Production
  displayName: Deploy Production
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy_Production
    displayName: Deploy
    variables: 
    - group: productionVars 
    environment: 'KubernetesProj'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: HelmInstaller@0
            displayName: Install Helm
            inputs:
              helmVersion: '2.14.1'
              installKubectl: true
              
          - task: DownloadPipelineArtifact@2
            displayName: Download packaged artifact
            inputs:
              buildType: 'current'
              artifactName: 'helmChart'
              targetPath: '$(Pipeline.Workspace)'
          

          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'ProductionConnection'
              namespace: '$(namespace)'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/helmChart/helm-$(Build.BuildId).tgz'
              releaseName: '$(namespace)'
              overrideValues: 'deployment.tag=$(Build.BuildNumber)'
              valueFile: '$(Pipeline.Workspace)/s/helm/$(stage)Values.yaml'
      

