# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

variables:
  dockerRegisteryServiceConnection: 'RegisteryConnection'
  imageRepository: 'weight-tracker-app'
  containerRegistery: 'pipelineassignmentregistery.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildNumber)'

pool:
  name: MyPool
  demands:
   - agent.name -equals MyAgent


stages:

# Continuous Integration Process
- stage: CI
  jobs:
  - job: BuildAndPushDocker
    workspace: 
      clean: all
    steps: 
    - task: Docker@2
      inputs:
        containerRegistry: $(dockerRegisteryServiceConnection)
        repository: $(imageRepository)
        command: 'buildAndPush'
        Dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
    
- stage: Deploy_Staging
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: Deploy Staging
  jobs:
    - deployment: Deploy
      variables:
      - group:  StagingVars
      environment: "StagingEnv"
      displayName: Deploy
      strategy:
         runOnce:
           deploy:
             steps:
             - task: Docker@2
               inputs:
                 containerRegistry: 'RegisteryConnection'
                 command: 'login'

             - task: CmdLine@2
               inputs:
                 script: |
                  docker run -d \
                  -e PORT=$(PORT) \
                  -e HOST=$(HOST) \
                  -e PGHOST=$(PGHOST) \
                  -e PGUSERNAME=$(PGUSERNAME) \
                  -e PGDATABASE=$(PGDATABASE) \
                  -e PGPASSWORD=$(PGPASSWORD) \
                  -e PGPORT=$(PGPORT) \
                  -e HOST_URL=$(HOST_URL) \
                  -e COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) \
                  -e NODE_ENV=$(NODE_ENV) \ 
                  -e OKTA_ORG_URL=$(OKTA_ORG_URL) \
                  -e OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) \
                  -e OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) \
                  -p 8080:8080 \
                  --name=appContainer $(containerRegistery)/$(imageRepository):$(tag)